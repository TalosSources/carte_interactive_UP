# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/5-Minute-Production-App.gitlab-ci.yml

# This template is on early stage of development.
# Use it with caution. For usage instruction please read
# https://gitlab.com/gitlab-org/5-minute-production-app/deploy-template/-/blob/v3.0.0/README.md

include:
  # workflow rules to prevent duplicate detached pipelines
  #- template: 'Workflows/Branch-Pipelines.gitlab-ci.yml'
  # auto devops build
  #- template: 'Jobs/Build.gitlab-ci.yml'

stages:
  #- build
  - test
  #- provision
  - deploy
  #- destroy

variables:
  #TF_ADDRESS: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/${CI_COMMIT_REF_SLUG}
  #TF_VAR_ENVIRONMENT_NAME: ${CI_PROJECT_PATH_SLUG}_${CI_PROJECT_ID}_${CI_COMMIT_REF_SLUG}
  #TF_VAR_SERVICE_DESK_EMAIL: incoming+${CI_PROJECT_PATH_SLUG}-${CI_PROJECT_ID}-issue-@incoming.gitlab.com
  #TF_VAR_SHORT_ENVIRONMENT_NAME: ${CI_PROJECT_ID}-${CI_COMMIT_REF_SLUG}
  #TF_VAR_SMTP_FROM: ${SMTP_FROM}

#cache:
#  paths:
#    - .terraform

django_test:
  stage: test
  script:
    - patch docker-compose.yml < compose-test.patch
    - sudo docker-compose up -d #initialize db
    - sleep 3
    - sudo docker-compose run api /code/manage.py test
    - sudo docker-compose down

deploy:
  stage: deploy
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
  script:
    - cd /var/lib/smartakartan/smartakartan-cd
    - sudo git reset --hard
    - sudo git pull
    - sudo bash -c 'git describe --long --all --dirty > gitver'
    - sudo patch docker-compose.yml < compose-deploy.patch
    - sudo patch nginx.conf < nginx-deploy.patch
    - sudo docker-compose down
    - sudo docker-compose up --build -d
  #environment:
    #name: $CI_COMMIT_REF_SLUG
    #url: $DYNAMIC_ENVIRONMENT_URL
    #on_stop: terraform_destroy
